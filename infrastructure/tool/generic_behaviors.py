from infrastructure.tool.views import Text, ManyButtons, FewButtons
from infrastructure.member.views import SenderManipulation


class GenericBase:
    member: SenderManipulation = None

    def __init__(self, member_utils):
        self.member = member_utils


class GetStartedPayload(GenericBase):
    alternative_welcome = (
        "Â¡Hola! ðŸ‘‹ Es un gusto saludarte. Â¿CÃ³mo podemos ayudarte?")
    # welcome = ("Â¡Hola %s! Por este medio podrÃ¡s participar en algunos "
    #            "temas y preguntas de %s" % (sender.user_name(), page.title))
    welcome = ("Â¡Hola! Por este medio podrÃ¡s participar en algunos "
               "temas y preguntas de nuestro espacio")
    title = ("Â¿Quieres comenzar a participar y mantenerte al tanto "
             "de lo que se proponga?")
    img_welcome = ("https://s3-us-west-2.amazonaws.com/cdn-yeeko/"
                   "static/img/bot/BIENVENIDA.png")

    def __call__(self):
        txt = Text(self.member, text_body=self.alternative_welcome)
        txt.send_message()


class KnowMorePayload(GenericBase):
    title = (
        "Hola, soy un chat-bot construÃ­do para facilitar la participaciÃ³n "
        # "de las personas involucradas en \"{0.title}\", lo harÃ© a travÃ©s "
        "de las personas involucradas en este espacio, lo harÃ© a travÃ©s "
        "de la interacciÃ³n por botones con opciones que te irÃ© preguntando. "
        "TambiÃ©n puedes navegar con un menÃº debajo de este chat, donde "
        "siempre podrÃ¡s volver a  ver las preguntas o los temas. Es muy "
        "importante que para que puedas participar, vayas eligiendo "
        "algunas de las opciones que te iremos ofreciendo. Creemos que "
        # "estÃ¡s listo para comenzar, gracias por estar aquÃ­ {1}!"
        "estÃ¡s listo para comenzar, gracias por estar aquÃ­!")
    title_button = "Â¿CÃ³mo quiero continuar?"
    interaction_type = "few_buttons"

    def __call__(self):
        Text(self.member, text_body=self.title).send_message()

        few_buttons = FewButtons(
            self.member, text_body=self.title_button)
        few_buttons.add_reply(
            title="SÃ­ participar", payload="AcceptanceNotification")
        few_buttons.send_message()


# def AcceptanceNotification(sender, variables={}, countdown=0):
#     sender.update(push_subscription=True, subscribe=True)
#     from bot_core.messYeeko import Yeekos
#
#     countdown=sender.send_simple_message(f"Â¡Bien! A partir de ahora eres "
#         f"parte de las decisiones de '{sender.pageP.title}', eventualmente "
#         "te informaremos cuando exista informacion relevante",
#         typing=True, countdown=countdown)
#
#     countdown=sender.send_b_message("Â¡Gracias por suscribirte!",
#        [{
#             "type": "postback",
#             "title": icBell + "Configurar alertas",
#             "payload": "SetAlerts"
#         },], countdown=countdown, typing=True)
#
#     from bot_core.messYeeko import Yeekos
#     return Yeekos(sender, variables={"header":"Â¡Ahora sÃ­ estamos listos! "
#         "Selecciona uno de los Yeekos:",
#         "settings":{"text_response":True}, "image_title":False},
#         countdown=countdown)


# def HelpA(sender, variables={}, countdown=0):
#     isYeeko=True if settings.FB_MAIN_PAGE==sender.pageP.pid else False
#     botones=BRR([["Â¿CÃ³mo crear Yeekos?", "HowYeeko"]]) if isYeeko else []
#     botones.extend(BRR([
#         ["Â¿CÃ³mo Proponer?", "HowProposal"],
#         ["Â¿CÃ³mo Votar?", "HowVote"],
#         ["Â¿CÃ³mo Comentar?", "HowComment"]   ]))
#     return sender.send_rrb_message(txt("HelpA"), botones, countdown=countdown,
#         typing=False)
#
